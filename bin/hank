#!/bin/bash

BINDIR=`dirname "$0"`
CONFDIR="$BINDIR/../conf"
JOBJAR=`find $BINDIR/../ -name 'hank*-jobjar.jar'`
COMPONENT=$1
shift
COMMAND=$1
shift
ARGS=$@

# Load environment variables
ENV_FILE="$CONFDIR"/hank-env.sh
if [ -f $ENV_FILE ]; then
  . $ENV_FILE
else
  echo "Warning: environment configuration file was not found: $ENV_FILE"
fi

SERVER_CLASS='com.rapleaf.hank.partition_server.PartitionServer'
UI_CLASS='com.rapleaf.hank.ui.WebUiServer'
CONDUCTOR_CLASS='com.rapleaf.hank.ring_group_conductor.RingGroupConductor'

# Default OPTS

HANK_SERVER_OPTS="$HANK_SERVER_OPTS -XX:+UseConcMarkSweepGC"
HANK_UI_OPTS="$HANK_UI_OPTS -XX:+UseConcMarkSweepGC"
HANK_CONDUCTOR_OPTS="$HANK_CONDUCTOR_OPTS -XX:+UseConcMarkSweepGC"

function start-server {
  set-opts $HANK_SERVER_OPTS
  start-component $SERVER_CLASS $ARGS
}

function stop-server {
  stop-component $SERVER_CLASS
}

function start-ui {
  set-opts $HANK_UI_OPTS
  start-component $UI_CLASS $ARGS
}

function stop-ui {
  stop-component $UI_CLASS
}

function start-conductor {
  set-opts $HANK_CONDUCTOR_OPTS
  start-component $CONDUCTOR_CLASS $ARGS
}

function stop-conductor {
  stop-component $CONDUCTOR_CLASS
}

function set-opts {
  JVM_OPTS=$@
}

function start-component {
 CLASSNAME=$1
 shift
 ARGS=$@
 COMMAND="java $JVM_OPTS -cp $JOBJAR $CLASSNAME $ARGS"
 echo "$COMMAND"
 eval $COMMAND
}

function stop-component {
  CLASSNAME=$1
  for PID in `jps -ml | grep $CLASSNAME | cut -d ' ' -f 1`; do
    echo "Killing $PID $CLASSNAME"
    kill $PID
  done
}

function main {

  case $COMMAND in
    "start");;
    "stop");;
    "restart");;
    *) echo "Invalid command: $COMMAND"; exit 1;;
  esac

  case $COMPONENT in
    "server");;
    "ui");;
    "conductor");;
    *) echo "Invalid component: $COMPONENT" ; exit 1;;
  esac

  if [ $COMMAND == "restart" ]; then
    stop-$COMPONENT
    start-$COMPONENT
  else
    $COMMAND-$COMPONENT
  fi
}

main
